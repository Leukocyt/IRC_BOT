//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IRCBot.DB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class internetEntities : DbContext
    {
        public internetEntities()
            : base("name=internetEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<irkki> irkki { get; set; }
        public virtual DbSet<lampotilaTaulu> lampotilaTaulu { get; set; }
        public virtual DbSet<irkkiTest> irkkiTest { get; set; }
        public virtual DbSet<logs> logs { get; set; }
        public virtual DbSet<irkki_old> irkki_old { get; set; }
        public virtual DbSet<timed_messages> timed_messages { get; set; }
        public virtual DbSet<timing_table> timing_table { get; set; }
        public virtual DbSet<rand_messages> rand_messages { get; set; }
        public virtual DbSet<rand_messages_old> rand_messages_old { get; set; }
    
        [DbFunction("internetEntities", "F_ROWS")]
        public virtual IQueryable<F_ROWS_Result> F_ROWS(Nullable<System.DateTime> start, Nullable<System.DateTime> end, string channel)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            var channelParameter = channel != null ?
                new ObjectParameter("channel", channel) :
                new ObjectParameter("channel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_ROWS_Result>("[internetEntities].[F_ROWS](@start, @end, @channel)", startParameter, endParameter, channelParameter);
        }
    
        [DbFunction("internetEntities", "F_Get_Stats")]
        public virtual IQueryable<F_Get_Stats_Result> F_Get_Stats(Nullable<System.DateTime> start, string kanava, Nullable<int> count_choise)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var kanavaParameter = kanava != null ?
                new ObjectParameter("kanava", kanava) :
                new ObjectParameter("kanava", typeof(string));
    
            var count_choiseParameter = count_choise.HasValue ?
                new ObjectParameter("count_choise", count_choise) :
                new ObjectParameter("count_choise", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_Get_Stats_Result>("[internetEntities].[F_Get_Stats](@start, @kanava, @count_choise)", startParameter, kanavaParameter, count_choiseParameter);
        }
    }
}
